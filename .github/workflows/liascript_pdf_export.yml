# .github/workflows/liascript_pdf_export.yml

name: Generate and Commit LiaScript PDFs

on:
  push:
    branches:
      - documentation
    paths:
      # Trigger NUR bei Änderungen an .md Dateien im presentation Ordner (und Unterordnern)
      - 'presentation/**/*.md'

permissions:
  # 'actions: write' für upload-artifact (falls du es behalten willst)
  # 'contents: write' wird benötigt, um Commits zurück ins Repo zu pushen
  actions: write
  contents: write

jobs:
  build-and-commit-pdfs: # Job-Name angepasst
    runs-on: ubuntu-latest

    steps:
      # Schritt 1: Code auschecken (vom documentation Branch)
      - name: Check out repository code
        uses: actions/checkout@v4
        with:
          ref: documentation
          # Wichtig: Token mit Schreibrechten auschecken für den späteren Push
          token: ${{ secrets.GITHUB_TOKEN }}

      # Schritt 2: Node.js einrichten
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # Schritt 3: Google Chrome installieren
      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable

      # Schritt 4: LiaScript Exporter installieren
      - name: Install LiaScript Exporter
        run: npm install -g @liascript/exporter

      # Schritt 5: PDFs für alle .md Dateien im presentation Ordner erstellen
      - name: Run LiaScript Exporter for all Markdown files
        run: |
          find presentation -name '*.md' | while read md_file; do
            base_name=$(basename "$md_file" .md)
            # ÄNDERUNG HIER: Entferne ".pdf" aus dem Output-Namen
            pdf_output="presentation/${base_name}"
            echo "Processing $md_file -> $pdf_output (exporter adds .pdf)" # Info angepasst
            # Der Exporter sollte jetzt presentation/expose.pdf erstellen
            liascript-exporter -f pdf -o "$pdf_output" -i "$md_file"
          done

      # --- DEBUGGING: Dateien nach Exporter auflisten ---
      - name: List files in presentation folder after export
        run: |
          echo "--- Listing files in presentation after export: ---"
          ls -l presentation/
          echo "--- End of file listing ---"

      # Schritt 6: Git konfigurieren
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      # Schritt 7: Änderungen IMMER hinzufügen und committen
      - name: Commit PDF changes (forced)
        run: |
          echo "--- Forcing add and commit for PDF files ---"
          # Füge alle PDF-Dateien im presentation-Ordner zum Index hinzu
          # (ignoriert, ob sie sich geändert haben oder nicht)
          git add presentation/*.pdf

          # Erstelle den Commit. Das wird auch gemacht, wenn 'git add' nichts Neues hinzugefügt hat,
          # aber es schadet nicht, außer dass eventuell leere Commits entstehen könnten,
          # wenn der Exporter die Datei *nicht* geändert/erstellt hat.
          # Wir behalten [ci skip] bei, um sicherzustellen, dass dieser Commit den Workflow nicht erneut auslöst.
          git commit -m "Automated PDF generation from LiaScript (forced)" -m "[ci skip]" || echo "No changes to commit or commit failed, continuing..."

      # Schritt 8: Änderungen pushen
      - name: Push PDF changes
        run: |
          # Versuche einfach zu pushen. Git meldet, wenn nichts zu tun ist.
          # Der vorherige Schritt stellt sicher, dass nur gepusht wird, wenn ein Commit gemacht wurde
          # (wobei wir hier sehen, dass kein Commit gemacht wurde -> Push wird nichts tun)
          echo "Attempting to push changes if any were committed..."
          git push origin documentation

      # --- Ende der neuen Schritte ---

      # Schritt 9 (Optional): Generierte PDFs weiterhin als Artefakt hochladen
      # Kann nützlich sein für schnellen Zugriff oder als Backup
      - name: Upload PDF artifacts (Optional)
        uses: actions/upload-artifact@v4
        with:
          name: waymo-presentation-pdfs
          path: presentation/*.pdf